"use strict";new class{constructor(t="main",e="section"){this.current=null,this.targets=[],this.isScrolling=!1,this.touchAnchor=0,this.deltaOffset={touch:100,wheel:30},this.init(t,e),this.listenEvents()}init(t,e){const s=document.querySelector(t);this.targets=Array.from(s.querySelectorAll(e)),this.current=this.targets.find((t=>t.classList.contains("active"))),this.current||(this.current=s.firstElementChild,this.current.classList.add("active"))}listenEvents(){document.addEventListener("wheel",(t=>this.onWheelScroll(t))),document.addEventListener("mousewheel",(t=>this.onWheelScroll(t))),document.addEventListener("DOMMouseScroll",(t=>this.onWheelScroll(t))),document.addEventListener("touchstart",(t=>this.onTouchStart(t))),document.addEventListener("touchend",(t=>this.onTouchEnd(t)))}onWheelScroll(t){Math.abs(t.deltaY)>this.deltaOffset.wheel&&!this.isScrolling&&(this.isScrolling=!0,this.moveVertical(t.deltaY))}onTouchStart(t){this.touchAnchor=t.changedTouches[0].screenY}onTouchEnd(t){const e=this.touchAnchor-t.changedTouches[0].screenY;Math.abs(e)>this.deltaOffset.touch&&this.moveVertical(e)}moveVertical(t){if(t>0&&!this.current.nextElementSibling||t<0&&!this.current.previousElementSibling)return void(this.isScrolling=!1);let e;this.current.classList.remove("active"),this.current=t>0?this.current.nextElementSibling:this.current.previousElementSibling,this.current.classList.add("active"),window.addEventListener("scroll",(()=>{window.clearTimeout(e),e=setTimeout((t=>{this.isScrolling=!1}),66)}),!1),window.scrollTo({top:this.current.offsetTop,left:this.current.offsetLeft,behavior:"smooth"})}};
